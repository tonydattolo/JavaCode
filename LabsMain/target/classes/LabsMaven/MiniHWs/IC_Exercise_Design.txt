VERSION 1

class AlarmTimerStopwatch
    attributes
        currentTime
        alarm1
        alarmOnOff
        alarm2
        alarm2OnOff
        stopwatchTime
        stopLap
        timerTime
    methods
        setAlarm1
        setAlarm2
        deleteAlarm1
        deleteAlarm2
        activateAlarm1
        activateAlarm2
        startTimer
        pauseTimer
        resetTimer
        startStopwatch
        lapStopwatch
        resetStopwatch
        timerEnd
        soundAlarm1
        soundAlarm2



VERSION 2

class something
    main method
        
        Alarms[] a = new Alarm[]
        Stopwatch s = new Stopwatch
        Timer t = new Timer


class Alarm
    attributes
        alarmHours
        alarmMinutes
        alarmSeconds
        isActive
        currentTime
    methods
        setAlarm
        deleteAlarm
        setAlarmSound
        setAlarmActive


class Stopwatch
    attributes
        int secondsPassed
        int minutesPassed
        int hoursPassed
        boolean isPaused
    methods
        start
        pause
        reset
        lap


class Timer
    setTimerHours
    setTimerMinutes
    setTimerSeconds
    cancelTimer
    startTimer
    setTimerEndMessage
    showEndMessage

Benefits:
The difference between the two versions is a separation of concerns.
Version 2 minimizes dependencies. If you want to add functionality in
version 2, there is less testing and debugging that needs to be done if there
are errors. This is considered low-coupling. High-coupling can cause problems
elsewhere in the dependent code. There is also good cohesion. 